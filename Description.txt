freetype 2.4.4	https://sourceforge.net/projects/freetype/files/freetype2/2.4.4/
				-> build freetype as static library
				-> use Mult-threaded DLL (/MD) insteed of Mult-threaded (/MT)
				-> rename the library to freetype.lib
				-> use include as it is
				
zlib 1.2.11		https://zlib.net/
				-> build zlibstatic rename it from zlibstatic.lib to zlib.lib
				-> use zconf.h and zlib.h 
				
zziplib			https://github.com/gdraheim/zziplib
				-> use the zziplib.sln out of msvc8
				-> use Mult-threaded DLL (/MD) insteed of Mult-threaded (/MT)
				-> change the linker input from zdll.lib to zlib.lib
				-> rename the library from zziplib-Release.lib to zziplib.lib
				-> use the files from zzip as include, use a structure include/zzip as include directory
				
FreeImage 3.15.0 https://sourceforge.net/projects/freeimage/files/Source%20Distribution/
	-> use Mult-threaded DLL (/MD) insteed of Mult-threaded (/MT) for all Projects
	-> build the project FreeImage
		* maybe you have to add #include <algorithm> in some files with min max errors
		* at dcraw_common.cpp replace the line 9217 " strcpy (th->soft, "dcraw v"VERSION);"
		  with "strcpy (th->soft, "dcraw v" VERSION);"
	-> build the project FreeImageLib
	-> use the library FreeImage.lib out of Dist
	-> use the file FreeImage.h out of Dist
	
cegui 0.6.2 	http://cegui.org.uk/wiki/CEGUI_Downloads_0.6.2
	-> cegui-deps http://prdownloads.sourceforge.net/crayzedsgui/cegui-deps-0.8.x-src.zip?download
		* build the dependencies they will work also with version 0.6.2
		* use the lib bin and include out of build/dependencies
	-> use projects premakes from cegui 0.7.6 to get the VS Solution
		* for this step you have to create a folder cegui with src and include inside the cegui 0.6.2 project folder
		* excecute projects/premake/build_vs2008.bat
	-> set the include and library directories to the dependencies
	-> build the project CEGUIBase as dll with Mult-threaded DLL (/MD) Code Generation
		* maybe you have to add #include <algorithm> in some files with min max errors
	-> use the artefects out of bin lib and the includes from cegui/incldue

Ode 0.13 https://sourceforge.net/projects/opende/files/ODE/0.13/
	-> open a cmd in ode-0.13/build and run th ecomand "premake4.exe --with-tests --with-demos vs2008"
	-> build the project ode with the configuration "ReleaseSingleLib"
	-> rename it from ode_single.lib to ode.lib
	-> use the artefact out of ode-0.13/lib and the includes from ode-0.13/include/ode

OIS 1.3 https://sourceforge.net/projects/wgois/files/Source%20Release/1.3/
	-> use OIS_ReleaseDLL configuration
	
Install the needed Sdk's
	DirectX SDK summer 2004 https://archive.org/details/dxsdk_sum2004
	CG 1.5 https://www.nvidia.com/en-us/drivers/cg-toolkit-15

Copy togehter the Ogre 1.4.9 Dependencies create a Folder Dependencies add empty Folder include and lib.
Copy the include Files 
	-> from Freetype/include to Dependencies/include  
	-> from zlib add zconf.h and zlib.h to Dependencies/include  
	-> from zziplib add the folder zzip to Dependencies/include 
	-> from FreeImage add FreeImage.h to Dependencies/include 
	-> from CG SDK add the folder CG out of include to Dependencies/include 
	-> from DirectX SDK add the files out of include to Dependencies/include 
	-> from cegui/include all files to Dependencies/include/CEGUI
	-> from ode/include/ode all files to Dependencies/include/ode
Copy the lib Files to the Folder Dependencies/lib it should contain  freetype.lib, FreeImage.lib, zlib.lib, zziplib.lib, cg.lib, CEGUIBase.lib, ode.lib
	-> from DirectX SDK add the files out of Lib to Dependencies/lib

Ogre 1.4.9	https://sourceforge.net/projects/ogre/files/ogre/1.4.9/ 
	-> depends on freetype, zlib, zziplib, FreeImage and 
	-> optional on DirectX SDK (RenderSystem_Direct3D9), highly recomanded to build it to run the samples out of the box
	-> optional on cegui (OgreGUIRenderer)	
	-> add _SILENCE_STDEXT_HASH_DEPRECATION_WARNINGS under Visual Studio Project ->properties -> C/C++ -> Preprocessor -> Preprocessor Definition before building projects
	-> use Ogre.sln
		* build OgreMain first and link to freetype.lib
		* build Plugin_BSPSceneManger, Plugin_CgProgramManger, Plugin_OctreeSceneManger, Plugin_ParticleFx, set Dependencies/lib manually if neccessaray
		* RenderSystem_Direct3D9 set Dependencies/lib manually if neccessaray, link additional againts legacy_stdio_definitions.lib and
		  #	deactivate "Image Has Safe Exception Handlers" under properties->Linker->Advanced 
		  #	or build the Modul with "Platform Toolset: VisualStudio2013(v120)"
		* build RenderSystem_GL
		* OgreGUIRenderer
		  # deactivate "Treat Warnings As Errors" under properties->C/C++->General
		* ReferenceAppLayer  define dSINGLE or dDOUBLE as Preprocessor Definition neccessaray for ode
		* Demo_BSP
	-> http://wiki.ogre3d.org/Building+Dependencies

Copy the Ogre 1.4.9 SDk togehter similar how in the origin SDK from https://sourceforge.net/projects/ogre/files/ogre/1.4.9

//no atctive used but in the camke of dungeon hack
doxygen 1.9.1	https://www.doxygen.nl/download.html
	->	winfflexbison 2.7 https://github.com/lexxmark/winflexbison/tree/bison2.7

MyGUI 2.2.3		https://sourceforge.net/projects/my-gui/files/MyGUI/
	-> depends on Ogre 1.4.9 and freetype
	-> build MyGUIEngine as static library
	-> add _SILENCE_STDEXT_HASH_DEPRECATION_WARNINGS under Visual Studio Project ->properties -> C/C++ -> Preprocessor -> Preprocessor Definition
	-> add MYGUI_DONT_REPLACE_NULLPTR under Visual Studio Project ->properties -> C/C++ -> Preprocessor -> Preprocessor Definition
	-> copy MyGUIEngine.lib to OgreSDK/lib
	-> copy the files out of MYGUIEngine/include to OgreSDK/include/MyGUI
	
Ogre PagedGeometry 1.1.0 https://code.google.com/archive/p/ogre-paged/downloads
	-> depends on Ogre 1.4.9 and ois
	-> add _SILENCE_STDEXT_HASH_DEPRECATION_WARNINGS under Visual Studio Project ->properties -> C/C++ -> Preprocessor -> Preprocessor Definition
		* at GrassLoader.cpp replace the line 1452 "sceneMgr->destroySceneNode(node);"
		  with "sceneMgr->destroySceneNode(node->getName());"
	-> build PagedGeometry
	-> use "PagedGeometryConfig.h" and the files out of include
	
Install the needed Sdk's	
	OpenAL https://www.openal.org/downloads/OpenAL11CoreSDK.zip 
	Python https://www.python.org/ftp/python/2.7/python-2.7.msi
	
Dungeonhack 0.10 http://dungeonhack.sourceforge.net/Downloads
	-> add _SILENCE_STDEXT_HASH_DEPRECATION_WARNINGS under Visual Studio Project ->properties -> C/C++ -> Preprocessor -> Preprocessor Definition
	-> if neccessaray add the includes and link the project
	-> if neccessaray link the project againts OpenAL manually
	-> if neccessaray link the project againts Python manually
	-> copy together the game directory similar to http://sourceforge.net/projects/dungeonhack/files/0.10/dungeonhack-0.10-win32.zip/download (dungeonhack-0.10-win32.zip)